
Na abordagem tradicional, programadores escrevem boa parte do código antes de
o testarem. Ao perceberem posteriormente um problema no \textit{design}, o custo para
corrigir pode ser alto demais. Uma vantagem de escrever os testes antes é
possibilitar que o desenvolvedor tome grande parte das decisões de \textit{design}
enquanto o custo de mudança ainda é baixo.


%% ------------------------------------------------------------------------- %%
\section{Efeitos na Simplicidade}


TDD não força o programador a dar "passos de bebê" o tempo todo, mas o
permite dá-los quando achar necessário
\cite{TDDByExample}. Caso o programador esteja confiante sobre o trecho de
código que está escrevendo naquele momento, ele pode dar um passo maior;  porém,
caso ele não esteja tão confiante, a prática o permite ir mais devagar e 
dar "passos de bebê", obtendo \textit{feedback} mais rápido sobre o código que está
escrevendo.

Equipes ágeis optam por não fazer o chamado \textit{big design up-front (BDUF)},
e deixam que o \textit{design} evolua ao longo do tempo, mantendo o código o mais claro e
simples possível, e refatorando sempre que há necessidade. Decisões de
\textit{design} são tomadas com a consciência de que elas serão alteradas no futuro
\cite{is-design-dead}.


Scott Ambler possui uma definição particular sobre como o praticante de TDD lida
com a simplicidade de \textit{design}. De acordo com suas ideias, TDD pode ser definido como
``\textit{TDD = Refatoração + Test-First Design}''. Ainda segundo o referido autor, um programador,
antes de implementar uma nova funcionalidade, deve observar se o \textit{design} atual
possibilita que essa funcionalidade seja implementada de maneira clara. Em caso
afirmativo, o programador segue o ciclo, escrevendo um teste que falha e
fazendo-o passar. Mas, em caso negativo, o programador deve refatorar a parte do
\textit{design} afetado pela nova funcionalidade, de maneira a possibilitar que ela seja
implementada da maneira mais fácil possível \cite{wambler-tdd}.



%% ------------------------------------------------------------------------- %%
\section{Princípios de Design de Classes e Testes de Unidade}




